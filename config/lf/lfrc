# ~/.config/lf/lfrc
# lf configuration file

# Basic settings
set shell zsh
set shellopts '-euy'
set ifs "\n"
set scrolloff 10
set icons
set period 1
set hidden true
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/preview'
set autoquit true

# Custom functions
cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
        text/*|application/json|application/javascript) $EDITOR $fx;;
        image/x-xcf) gimp $f >/dev/null 2>&1 & ;;
        image/svg+xml) display -- $f ;;
        image/*) sxiv $f >/dev/null 2>&1 & ;;
        audio/*) mpv --audio-display=no $f ;;
        video/*) mpv $f >/dev/null 2>&1 & ;;
        application/pdf|application/vnd*|application/epub*) zathura $fx >/dev/null 2>&1 & ;;
        application/pgp-encrypted) $EDITOR $fx ;;
        *) for f in $fx; do xdg-open "$f" > /dev/null 2> /dev/null & done;;
    esac
}}

# Extract archives
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# Compress files
cmd compress ${{
    set -f
    mkdir -p "$f-archive"
    cp -r $fx "$f-archive"
    tar -czvf "$f.tar.gz" "$f-archive"
    rm -rf "$f-archive"
}}

# Make directory
cmd mkdir ${{
    printf "Directory Name: "
    read ans
    mkdir -p $ans
}}

# Make file
cmd mkfile ${{
    printf "File Name: "
    read ans
    $EDITOR $ans
}}

# Bulk rename
cmd bulk-rename ${{
    old=$(mktemp)
    new=$(mktemp)
    [ -n $fx ] && fs=$(ls)
    printf "$fs\n" > $old
    printf "$fs\n" > $new
    $EDITOR $new
    [ $(cat $new | wc -l) -ne $(cat $old | wc -l) ] && exit
    paste $old $new | while read names; do
        src=$(printf $names | cut -f1)
        dst=$(printf $names | cut -f2)
        [ $src = $dst ] && continue
        [ -e $dst ] && continue
        mv $src $dst
    done
    rm $old $new
}}

# Trash function (better than permanently deleting)
cmd trash ${{
    set -f
    printf "$fx\n"
    printf "Trash? [y/n] "
    read ans
    [ $ans = "y" ] && mv $fx ~/.trash
}}

# Delete function (permanently delete)
cmd delete ${{
    set -f
    printf "$fx\n"
    printf "Delete permanently? [y/n] "
    read ans
    [ $ans = "y" ] && rm -rf $fx
}}

# Mappings
# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d
map c
map e

# File operations
map . set hidden!
map DD delete
map dd trash
map p paste
map x cut
map y copy
map <enter> open
map mf mkfile
map md mkdir
map ms $mkscript
map mr bulk-rename
map R reload
map C compress
map X extract
map o open_config
map r rename
map H top
map L bottom
map J half-down
map K half-up
map i $LESSOPEN='| ~/.config/lf/preview %s' less -R $f
map w $setsid -f $TERMINAL >/dev/null 2>&1

# Movement
map gtr cd ~/.trash
map gus cd /run/media
map gco cd ~/.config
map ghm cd ~
map gdl cd ~/Downloads
map gdw cd ~/Documents

# Neovim like bindings
map gg top
map G bottom
map D delete

# Toggle layouts
map td set preview!
map th set hidden!
map tr set reverse!

# Use CTRL+n to create a new directory
map <c-n> push :mkdir<space>

# File colors
# (based on file extension)
set dircolors true

# Integrated bookmarks
map gh :cd ~
map ge :cd /etc
map gu :cd /usr
map gd :cd /dev
map gl :cd /var/log
map gt :cd /tmp
